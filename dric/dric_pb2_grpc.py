# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dric_pb2 as dric__pb2


class DrICVideoServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getCameraFrame = channel.unary_unary(
        '/dric.video.DrICVideoServer/getCameraFrame',
        request_serializer=dric__pb2.CameraFrameRequest.SerializeToString,
        response_deserializer=dric__pb2.CameraFrameResponse.FromString,
        )
    self.queryCameraFrames = channel.unary_stream(
        '/dric.video.DrICVideoServer/queryCameraFrames',
        request_serializer=dric__pb2.CameraFrameRangeRequest.SerializeToString,
        response_deserializer=dric__pb2.CameraFrameResponse.FromString,
        )


class DrICVideoServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getCameraFrame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryCameraFrames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DrICVideoServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getCameraFrame': grpc.unary_unary_rpc_method_handler(
          servicer.getCameraFrame,
          request_deserializer=dric__pb2.CameraFrameRequest.FromString,
          response_serializer=dric__pb2.CameraFrameResponse.SerializeToString,
      ),
      'queryCameraFrames': grpc.unary_stream_rpc_method_handler(
          servicer.queryCameraFrames,
          request_deserializer=dric__pb2.CameraFrameRangeRequest.FromString,
          response_serializer=dric__pb2.CameraFrameResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dric.video.DrICVideoServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
